/*
 * HMI_ECU_main.c
 *
 *  Created on: Oct 27, 2023
 *      Author: Mark
 */

#include "my_keypad.h"
#include "my_lcd.h"
#include <util/delay.h>
#include "timer1.h"
#include "avr/io.h"
#include "uart.h"
#define PASS_SIZE 5
#define READY 0x0F
#define PASS_EXIST 0xF7
#define SEND_PASS 0x11
#define PASS_CONFIRM 0x22
#define SEND_CURRENT_PASS 0x33
#define CHECK_CURRENT_PASS 0X44
#define OPEN_DOOR 0X55
#define CHANGE_PASS 0X066
#define ALARM_ON 0x77
char g_pass[5]={0};
char g_passConfirm[5]={0};
char g_timerFlag=0;
char g_timercount=0;
void timer_delay(void){
	static uint8 count=0;
	count++;
	if(count==g_timercount){
		Timer1_deInit();
		count=0;
		g_timercount=0;
		g_timerFlag=1;
	}

}


void enter_new_pass(){
	LCD_clearScreen();
	LCD_displayString("Plz enter pass:  ");
	LCD_moveCursor(1,0);
	char i=0;
	for(i=0;i<PASS_SIZE;i++){
		g_pass[i]=KEYPAD_getPressedKey();
		_delay_ms(400);
		LCD_displayChar('*');
	}
	while(KEYPAD_getPressedKey()!=13);
	_delay_ms(200);
	LCD_clearScreen();
	LCD_displayString("Plz re-enter the");
	LCD_moveCursor(1,0);
	LCD_displayString("same pass: ");
	for(i=0;i<PASS_SIZE;i++){
		g_passConfirm[i]=KEYPAD_getPressedKey();
		_delay_ms(400);
		LCD_displayChar('*');
	}
	while(KEYPAD_getPressedKey()!=13);
	LCD_clearScreen();
}





void sendPass(){
	while(UART_recieveByte()!=READY);
	//	LCD_displayString("ready received");
	UART_sendByte(SEND_PASS);

	for(char i=0;i<PASS_SIZE;i++){
		UART_sendByte(g_pass[i]);
	}
	//	while(UART_recieveByte()!=READY);
	for(char i=0;i<PASS_SIZE;i++){
		UART_sendByte(g_passConfirm[i]);
	}

}




uint8 checkIfPassExist(){
	while(UART_recieveByte()!=READY);
	UART_sendByte(PASS_EXIST);
	if(UART_recieveByte()==PASS_EXIST)
		return PASS_EXIST;
	else
		return 0;
}




uint8 passConfirm(){
	while(UART_recieveByte()!=READY);
	uint8 confirmation=UART_recieveByte();
	if(confirmation==PASS_CONFIRM)
		return PASS_CONFIRM;
	else
		return 0;
}




void enterNewPassWithConfirm(){
	uint8 static flag=0;
	while(flag==0){
		enter_new_pass();
		sendPass();
		if(passConfirm()==PASS_CONFIRM){
			flag=1;
			LCD_displayString("pass match");
		}
		else
			LCD_displayString("pass don't match");
	}
}

void enterCurrentPass(){
	LCD_clearScreen();
	LCD_displayString("Plz enter Pass: ");
	LCD_moveCursor(1,0);
	for(char i=0;i<PASS_SIZE;i++){
		g_pass[i]=KEYPAD_getPressedKey();
		_delay_ms(400);
		LCD_displayChar('*');
	}
	while(KEYPAD_getPressedKey()!=13);
}
void sendCurrentPass(){
	while(UART_recieveByte()!=READY);
	UART_sendByte(SEND_CURRENT_PASS);
	for(char i=0;i<PASS_SIZE;i++){
		UART_sendByte(g_pass[i]);
	}
}
uint8 checkCurrentPass(){
	while(UART_recieveByte()!=READY);
	UART_sendByte(CHECK_CURRENT_PASS);
	uint8 data;
	data=UART_recieveByte();
	if(data==PASS_CONFIRM)
		return PASS_CONFIRM;
	else
		return 0;
}
void openDoor(){
	while(UART_recieveByte()!=READY);
	UART_sendByte(OPEN_DOOR);
}
void displayMainOption(){
	uint8 key;
	char wrongPassCount=0;
	uint8 WrongPassFlag=0;
	LCD_displayString("+ : Open Door");
	LCD_moveCursor(1,0);
	LCD_displayString("- : Change Pass");
	key=KEYPAD_getPressedKey();
	Timer1_ConfigType timer_config={0,31250,CLK_256,CTC_OCR1A};

	_delay_ms(400);
	//	while(flag==0){
	switch(key){
	case '+':
		while(WrongPassFlag==0){
			_delay_ms(200)
			enterCurrentPass();//enter pass
			sendCurrentPass();//send pass
			if(checkCurrentPass()==PASS_CONFIRM){
				WrongPassFlag=1;
				//				flag=1;
				openDoor();//opendoor
				LCD_clearScreen();
				LCD_displayString("Door is");
				LCD_moveCursor(1,0);
				LCD_displayString("Unlocking");
				g_timercount=8;
				Timer1_setCallBack(timer_delay);
				Timer1_init(&timer_config);
				while(g_timerFlag!=1);
				g_timerFlag=0;
				LCD_clearScreen();
				LCD_displayString("Door is Locking");
				g_timercount=5;
				Timer1_setCallBack(timer_delay);
				Timer1_init(&timer_config);
				while(g_timerFlag!=1);
				g_timerFlag=0;
				LCD_clearScreen();
			}
			else{
				wrongPassCount++;
				if(wrongPassCount==3){
					UART_sendByte(ALARM_ON);
					LCD_clearScreen();
					LCD_displayString("SYSTEM LOCKED!!!");
					g_timercount=10;
					Timer1_setCallBack(timer_delay);
					Timer1_init(&timer_config);
					while(g_timerFlag!=1);
					g_timerFlag=0;

				}

			}
		}//renter pass
		break;
	case '-':
		enterCurrentPass();//enter pass
		sendCurrentPass();//send pass
		if(checkCurrentPass()==PASS_CONFIRM){
			UART_sendByte(CHANGE_PASS);
		}
		break;
	default:
		key=KEYPAD_getPressedKey();
		_delay_ms(400);
	}
	//	}

}
int main(void){
	LCD_init();
	UART_ConfigType uart_config={UART_8BIT,PARITY_DISABLE,UART_1_STOP_BIT,9600};
	UART_init(&uart_config);
	SREG|=(1<<7);
	while(1){
		if(checkIfPassExist()!=PASS_EXIST){
			enterNewPassWithConfirm();
		}
		else {
			displayMainOption();
		}
	}
}
